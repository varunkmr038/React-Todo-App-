{"version":3,"sources":["components/Note.js","components/Todo.js","img/todo-icon.png","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","icon","cursor","color","Note","props","classes","lists","JSON","parse","localStorage","getItem","className","data","onClick","id","setData","setId","updated","filter","ele","index","setItem","stringify","setItems","deleteItem","input","backgroundColor","width","borderRadius","outline","padding","checkBtn","Todo","useState","items","TextField","InputProps","startAdornment","InputAdornment","position","endAdornment","updateItem","Icon","title","e","style","fontWeight","placeholder","onChange","target","value","map","Button","variant","window","confirm","clear","onMouseOut","innerHTML","onMouseOver","App","src","todoIcon","alt","height","createTheme","typography","fontFamily","join","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e3f83574.chunk.js","sourcesContent":["import React from \"react\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Note = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const lists = JSON.parse(localStorage.getItem(\"Todo\"));\r\n\r\n  const deleteItem = (id) => {\r\n    const updated = lists.filter((ele, index) => {\r\n      return index !== id;\r\n    });\r\n    localStorage.setItem(\"Todo\", JSON.stringify(updated));\r\n    props.setItems(updated);\r\n  };\r\n\r\n  const updateItem = (id) => {\r\n    props.setData(lists[id]);\r\n    props.setId(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card mb-2\">\r\n        <span>{props.data}</span>\r\n        <EditOutlinedIcon\r\n          className={classes.icon}\r\n          onClick={() => updateItem(props.id)}\r\n        />\r\n        <DeleteOutlineOutlinedIcon\r\n          className={classes.icon}\r\n          onClick={() => deleteItem(props.id)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Note from \"./Note\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    width: \"30%\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    padding: \"6px\",\r\n  },\r\n\r\n  icon: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n    },\r\n  },\r\n\r\n  checkBtn: {},\r\n}));\r\n\r\nconst Todo = () => {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(\"\");\r\n  const [id, setId] = useState(-1);\r\n\r\n  const lists = JSON.parse(localStorage.getItem(\"Todo\"));\r\n  const [items, setItems] = useState(lists ? lists : []);\r\n  localStorage.setItem(\"Todo\", JSON.stringify(items));\r\n\r\n  const addItem = (e) => {\r\n    if (!data) return;\r\n\r\n    setItems([...items, data]);\r\n    setData(\"\");\r\n\r\n    localStorage.setItem(\"Todo\", JSON.stringify(items));\r\n  };\r\n\r\n  const updateItem = (id) => {\r\n    items[id] = data;\r\n    setItems(items);\r\n    setData(\"\");\r\n\r\n    localStorage.setItem(\"Todo\", JSON.stringify(items));\r\n    setId(-1);\r\n  };\r\n  const removeAll = (e) => {\r\n    if (window.confirm(\"Do you really want to clear ?\")) {\r\n      localStorage.clear();\r\n      setItems([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"my-3\">Add Your List Here üëã</h5>\r\n      <TextField\r\n        className={` mb-3 ${classes.input}`}\r\n        id=\"input-with-icon-textfield\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">‚úçÔ∏è</InputAdornment>,\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              {id >= 0 ? (\r\n                <EditOutlinedIcon\r\n                  className={classes.icon}\r\n                  onClick={() => updateItem(id)}\r\n                />\r\n              ) : (\r\n                <Icon\r\n                  className={`fa fa-plus-circle ${classes.icon}`}\r\n                  color=\"primary\"\r\n                  title=\"Add Item\"\r\n                  onClick={(e) => addItem(e)}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n          style: { fontWeight: \"bold\" },\r\n        }}\r\n        placeholder=\"Add Item....\"\r\n        onChange={(e) => setData(e.target.value)}\r\n        value={data}\r\n      />\r\n\r\n      {items.map((ele, index) => {\r\n        return (\r\n          <Note\r\n            key={index}\r\n            data={ele}\r\n            id={index}\r\n            setItems={setItems}\r\n            setData={setData}\r\n            setId={setId}\r\n          />\r\n        );\r\n      })}\r\n      <Button\r\n        className={`mt-3 ${classes.checkBtn}`}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={removeAll}\r\n      >\r\n        <span\r\n          onMouseOut={(e) => (e.target.innerHTML = \"Check List\")}\r\n          onMouseOver={(e) => (e.target.innerHTML = \"Remove All\")}\r\n        >\r\n          Check List\r\n        </span>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","export default __webpack_public_path__ + \"static/media/todo-icon.c33068b2.png\";","import \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Todo from \"./components/Todo\";\nimport todoIcon from \"./img/todo-icon.png\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <div className=\"icon\">\n          <img src={todoIcon} alt=\"Todo Icon\" height=\"100\" width=\"100\" />\n        </div>\n        <Todo />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: ['\"Mulish\"', \"sans-serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}